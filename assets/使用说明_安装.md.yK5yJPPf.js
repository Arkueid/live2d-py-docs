import{_ as e,c as s,a0 as i,o as t}from"./chunks/framework.Dz_4l__G.js";const k=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"使用说明/安装.md","filePath":"使用说明/安装.md"}'),l={name:"使用说明/安装.md"};function p(h,a,n,r,d,o){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><h2 id="pypi" tabindex="-1">PyPi <a class="header-anchor" href="#pypi" aria-label="Permalink to &quot;PyPi&quot;">​</a></h2><p>通过 <a href="https://pypi.org/project/live2d-py/" target="_blank" rel="noreferrer">PyPI</a> 安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d-py</span></span></code></pre></div><h2 id="github-release" tabindex="-1">Github Release <a class="header-anchor" href="#github-release" aria-label="Permalink to &quot;Github Release&quot;">​</a></h2><p>在 <a href="https://github.com/Arkueid/live2d-py/releases/latest" target="_blank" rel="noreferrer">Release</a> 中下载对应版本的 <code>whl</code> 文件并安装（推荐）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d_py-0.X.X-cpXXX-cpXXX-win32.whl</span></span></code></pre></div><h2 id="源码构建" tabindex="-1">源码构建 <a class="header-anchor" href="#源码构建" aria-label="Permalink to &quot;源码构建&quot;">​</a></h2><h3 id="依赖" tabindex="-1">依赖 <a class="header-anchor" href="#依赖" aria-label="Permalink to &quot;依赖&quot;">​</a></h3><p>安装 cmake，gcc / msvc</p><p>python dev 环境：对于 Windows，安装 Python 时需要勾选 Standard Library 和 Development 选项。对于 Linux ，以 Debian 为例：<code>sudo apt install python3-dev</code></p><p>opengl 环境：对于 Windows，一般不需要配置。Linux 下需要安装对应的 dev 依赖，以 Debian 为例：<code>sudo apt install libgl1-mesa-dev libglu1-mesa-dev</code></p><h3 id="setuptools" tabindex="-1">Setuptools <a class="header-anchor" href="#setuptools" aria-label="Permalink to &quot;Setuptools&quot;">​</a></h3><p>在仓库根目录执行pip命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d-py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>在 <a href="https://github.com/Arkueid/live2d-py/releases/latest" target="_blank" rel="noreferrer">Release</a> 中下载源码进行构建安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d_py-0.X.X.tar.gz</span></span></code></pre></div><h3 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h3><p>克隆本仓库，自行编译构建，参考 <a href="/live2d-py-docs/使用说明/编译.html">编译</a></p>`,19)]))}const u=e(l,[["render",p]]);export{k as __pageData,u as default};
