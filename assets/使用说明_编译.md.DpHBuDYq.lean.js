import{_ as a,c as n,a0 as p,o as e}from"./chunks/framework.Dz_4l__G.js";const i="/live2d-py-docs/vscode-plugins.png",l="/live2d-py-docs/configure-cmake.png",t="/live2d-py-docs/output-encoding.png",o="/live2d-py-docs/select-builder.png",d="/live2d-py-docs/cmake-config.png",c="/live2d-py-docs/config-done.png",r="/live2d-py-docs/build.png",_=JSON.parse('{"title":"编译","description":"","frontmatter":{},"headers":[],"relativePath":"使用说明/编译.md","filePath":"使用说明/编译.md"}'),h={name:"使用说明/编译.md"};function g(k,s,u,y,m,b){return e(),n("div",null,s[0]||(s[0]=[p(`<h1 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h1><h2 id="对于-3-0-版本" tabindex="-1">对于 3.0 版本 <a class="header-anchor" href="#对于-3-0-版本" aria-label="Permalink to &quot;对于 3.0 版本&quot;">​</a></h2><ol><li>克隆本仓库到本地文件夹 <code>live2d-py</code></li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:Arkueid/live2d-py.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d-py</span></span></code></pre></div><ol start="2"><li><p>安装 <strong>CMake</strong> 、<strong>Visual Studio Code</strong> 和 <strong>Visual Studio</strong></p></li><li><p>用 <strong>Visual Studio Code</strong> 打开本仓库</p></li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live2d-py</span></span></code></pre></div><ol start="4"><li>修改 <code>LAppModelWrapper.cpp</code> 同目录下的 <code>CMakeLists.txt</code></li></ol><p>将下面 <code>D:/pydk</code> 修改为对应版本的 Python 安装目录。</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 寻找Python</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">CMAKE_PREFIX_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D:/pydk)</span></span></code></pre></div><p><code>d:/pydk</code> 的结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>d:\\pydk</span></span>
<span class="line"><span>|-- DLLs</span></span>
<span class="line"><span>|-- LICENSE.txt</span></span>
<span class="line"><span>|-- Lib</span></span>
<span class="line"><span>|-- NEWS.txt</span></span>
<span class="line"><span>|-- Scripts</span></span>
<span class="line"><span>|-- Tools</span></span>
<span class="line"><span>|-- include</span></span>
<span class="line"><span>|-- libs</span></span>
<span class="line"><span>|-- python.exe</span></span>
<span class="line"><span>|-- python.pdb</span></span>
<span class="line"><span>|-- python3.dll</span></span>
<span class="line"><span>|-- python310.dll</span></span>
<span class="line"><span>|-- python310.pdb</span></span>
<span class="line"><span>|-- python310_d.dll</span></span>
<span class="line"><span>|-- python310_d.pdb</span></span>
<span class="line"><span>|-- python3_d.dll</span></span>
<span class="line"><span>|-- python_d.exe</span></span>
<span class="line"><span>|-- python_d.pdb</span></span>
<span class="line"><span>|-- pythonw.exe</span></span>
<span class="line"><span>|-- pythonw.pdb</span></span>
<span class="line"><span>|-- pythonw_d.exe</span></span>
<span class="line"><span>|-- pythonw_d.pdb</span></span>
<span class="line"><span>\`-- vcruntime140.dll</span></span></code></pre></div><ol start="5"><li><strong>Visual Studio Code</strong> 安装插件：<code>C/C++</code>、<code>CMake</code>、<code>CMake Tools</code></li></ol><p><img src="`+i+'" alt="插件"></p><ol start="6"><li>在 <strong>Visual Studio Code</strong> 中按下 <code>Ctrl + Shift + P</code> 打开选项面板，选择 <code>CMake: Configure</code></li></ol><p><img src="'+l+'" alt="配置CMake"></p><ol start="7"><li>执行构建</li></ol><p>设置 output 输出日志的编码为 utf-8。</p><p><img src="'+t+'" alt="output-encoding"></p><p>选择构建工具 <code>Visual Studio Community 20XX Release - x86</code>。如果目标平台为 <code>x64</code>，则选择 <code>Visual Studio Community 20XX Release - amd64</code></p><p><img src="'+o+'" alt="选择构建工具"></p><p>选择配置为 <code>Release</code></p><p><img src="'+d+'" alt="CMake配置"></p><p>当配置完毕，生成 <code>build</code> 文件夹后，输出如下：</p><p><img src="'+c+'" alt="配置完毕"></p><p>构建目标选择 <code>LAppModelWrapper</code>，点击 <code>build</code> 编译生成。</p><p><img src="'+r+'" alt="build"></p><p>编译完毕，输出文件为 <code>package/live2d/live2d.pyd</code>。</p><ol start="8"><li>使用，将 <code>package</code> 目录下的 <code>live2d</code> 文件夹作为 <code>Python</code> 模块集成即可。</li></ol><h2 id="对于-2-0-版本" tabindex="-1">对于 2.0 版本 <a class="header-anchor" href="#对于-2-0-版本" aria-label="Permalink to &quot;对于 2.0 版本&quot;">​</a></h2><p>克隆 <a href="https://github.com/Arkueid/live2d-py/tree/v2" target="_blank" rel="noreferrer">v2</a> 分支源码，编译步骤基本相同，但受依赖库限制，Python 解释器只能使用 32 位。</p>',30)]))}const C=a(h,[["render",g]]);export{_ as __pageData,C as default};
